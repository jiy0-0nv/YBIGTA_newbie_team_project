# 1. 베이스 이미지 선택
# Python 3.9의 가벼운(slim) 버전을 기반으로 이미지를 생성합니다.
FROM python:3.11

# 2. 작업 디렉토리 설정
# 컨테이너 내에서 명령어를 실행할 기본 폴더 만들고 기본 작업디렉토리로 설정
WORKDIR /usr/src/app

# 3. 의존성 파일 복사 및 설치 (캐시 효율성 활용)
# 먼저 로컬의 requirements.txt 파일을 도커의 작업디렉토리로 복사함
# 이렇게 하면 소스 코드만 변경되었을 때, 매번 라이브러리를 새로 설치하지 않고 캐시를 활용하여 빌드 속도가 빨라집니다.
COPY requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# 4. 소스 코드 복사
# 로컬의 현재 디렉토리 모든 파일을 컨테이너의 작업 디렉토리로 복사
COPY . .

# 5. 포트 노출
# 컨테이너가 8000번 포트를 외부에 노출할 것임을 명시합니다.
EXPOSE 8000

# 6. 서버 실행 명령어
# 이미지에서 docker run으로 컨테이너를 띄울때 실행될 명령을 미리 정해둠
# 컨테이너가 시작될 때 Uvicorn 서버를 실행합니다.
# --host 0.0.0.0 옵션은 컨테이너 외부에서도 접속을 허용하기 위해 필수적입니다.
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]